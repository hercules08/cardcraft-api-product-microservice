// <auto-generated />
using Cardcraft.Microservice.Product.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cardcraft.Microservice.Product.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20190310053533_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cardcraft.Microservice.Product.Model.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("DescriptionText");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.Property<int>("ViewCount");

                    b.HasKey("Id");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("Cardcraft.Microservice.Product.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CardId");

                    b.Property<string>("Email");

                    b.Property<string>("FromAddress");

                    b.Property<string>("Message");

                    b.Property<string>("Recipient");

                    b.Property<string>("Sender");

                    b.Property<string>("ToAddress");

                    b.Property<string>("UserProfileId");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Cardcraft.Microservice.Product.Model.Order", b =>
                {
                    b.HasOne("Cardcraft.Microservice.Product.Model.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
